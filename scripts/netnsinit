#!/bin/bash

set -e

display_usage() {
	echo "Auto configuration for systemd-named-netns."
	echo -e "\nUsage:\n\t$0 network-type ns-name \n"
	echo "Note: you may need root privileges for this."
}

autoconfigure_tunnel() {
	if [ ! -z "$MACADDR" ]; then
		/bin/ip link set ${DEVNAME_INSIDE} address ${MACADDR}
	fi
	if [ "${DHCPV4}" == "1" ]; then
		! mkdir -p /var/run/netns
		dhclient -v -i ${DEVNAME_INSIDE} -nw -pf /var/run/netns/dhclient-${NSNAME}.pid
	else
		if [ ! -z "${IPADDR}" ]; then
			echo exec: /bin/ip address add ${IPADDR} dev ${DEVNAME_INSIDE}
			/bin/ip address add ${IPADDR} dev ${DEVNAME_INSIDE}
		fi
		if [ ! -z "${GATEWAY}" ]; then
			/bin/ip route add default via ${GATEWAY%%/*}
		fi
	fi
	return 0 # additional precation against "set -e" in case of future mods of this function
}

autoconfigure_nat() {
	# add default route if gateway undefined
	if [ -z "${GATEWAY}" -a -n "${IPADDR_OUTSIDE}" ]; then
		/bin/ip route add default via ${IPADDR_OUTSIDE%%/*}
	fi
	return 0 # additional precation against "set -e" in case of future mods of this function
}

autoconfigure() {
	local NSTYPE=$1
	local NSNAME=$2

	echo "Starting autoconfigure for $NSTYPE ${NSNAME}"
	DEVNAME_INSIDE=vn-${NSNAME}1

	if [ -e /etc/netns/netns-global.conf ]; then
		echo sourcing global config
		source /etc/netns/netns-global.conf
		echo sourced global config
	else
		echo "global config file /etc/netns/netns-global.conf does not exist!"
	fi
	if [ -e "/etc/netns/${NSNAME}/netns.conf" ]; then
		echo sourcing local config
		source "/etc/netns/${NSNAME}/netns.conf"
		echo sourced local config
	fi

	if type -t autoconfigure_$NSTYPE >/dev/null ; then
		autoconfigure_$NSTYPE "$@"
	fi

	set +e
	if [ ! -z "${POSTCONFIGURE}" ]; then
		eval "${POSTCONFIGURE}"
		if [ $? == 0 ]; then
			echo "The post configure script variable eval resulted in exit code $?."
		fi
	fi
	set -e

	echo "Autoconfiguration finished."
}

if [ $# == 0 ]; then
	display_usage
	exit 1
fi

case "$1" in
	"--help" | "-h")
		display_usage
		exit 0
		;;
	"tunnel"|"bridge"|"nat")
		autoconfigure "$@"
		exit 0
		;;
	*)
		echo "Unknown network type. Quitting."
		exit 1
		;;
esac
